{"compress":true,"commitItems":[["bbe48948-9072-476c-9052-0474761948e5",1508297620853,"---\nstyle: ocean\n---\n结构\n===\n\n\n#### 5.1、使用解构存取和使用多属性对象。\n\n>\t为什么？\n\t因为解构能减少临时引用属性。\n\n```javascript\n // bad\n  function getFullName(user) {\n    const firstName = user.firstName;\n    const lastName = user.lastName;\n\n    return `${firstName} ${lastName}`;\n  }\n\n  // good\n  function getFullName(obj) {\n    const { firstName, lastName } = obj;\n    return `${firstName} ${lastName}`;\n  }\n\n  // best\n  function getFullName({ firstName, lastName }) {\n    return `${firstName} ${lastName}`;\n  }\n```\n#### 5.2、对数组使用解构赋值。\n\n```javascript\nconst arr = [1, 2, 3, 4];\n\n// bad\nconst first = arr[0];\nconst second = arr[1];\n\n// good\nconst [first, second] = arr;\n```\n#### 5.3、需要回传多个值时，使用对象解构，而不是数组解构。\n\n>\t为什么？\n\t增加属性或者改变排序不会改变调用时的位置。\n\n```javascript\n  // bad\n  function processInput(input) {\n    // then a miracle occurs\n    return [left, right, top, bottom];\n  }\n\n  // 调用时需要考虑回调数据的顺序。\n  const [left, __, top] = processInput(input);\n\n  // good\n  function processInput(input) {\n    // then a miracle occurs\n    return { left, right, top, bottom };\n  }\n\n  // 调用时只选择需要的数据\n  const { left, right } = processInput(input);\n```\n",[[1508297593983,["zhuzhanpeng@ZhuZhanpengdeMacBook-Air.local",[[1,0,"06.字符串"]],[0,0],[6,6]]],[1508297596767,["zhuzhanpeng@ZhuZhanpengdeMacBook-Air.local",[[-1,0,"06.字符串"]],[6,6],[0,0]]]]]]}